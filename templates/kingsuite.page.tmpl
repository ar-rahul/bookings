{{template "base" .}}

{{define "loadjs"}}

<script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/js/datepicker-full.min.js" ></script>
<script src="https://unpkg.com/notie" ></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11" ></script>

{{end}}

{{define "content"}}

<div class="container">

    <div class="row">
        <div class="col">
            <img src="/static/images/kingsuite.png" class="img-fluid img-thumbnail room-image mx-auto d-block" alt="King Suite image">
        </div>

    </div>
    <div class="row">
        <div class="col">
            <h1 class="text-center mt-4">King Suite</h1>
            <p>Your home away from home, this will be a vacation to remember.Your home away from home, this will be a vacation to remember.
                Your home away from home, this will be a vacation to remember.Your home away from home, this will be a vacation to remember.
                Your home away from home, this will be a vacation to remember.Your home away from home, this will be a vacation to remember.
                Your home away from home, this will be a vacation to remember.Your home away from home, this will be a vacation to remember.
            </p>
        </div>
    </div>

    <div class="row">
        <div class="col text-center mb-2">
            <a id="check-availability-button" href="#!" class="btn btn-success">Check Availability Now</a>

        </div>         

    </div>

</div>

{{end}}

{{define "js"}}

<script>

    let attention = Prompt();


    document.getElementById("check-availability-button").addEventListener("click",function(){
            // notify("This is my message","warning")
        // notifyModal("title","<em>hello, world</em>","success","Button Text")
            // attention.error({msg:"Oops.."});

            let html = `
            <form id="check-availability-form" action="" method="post" novalidate class="needs-validation">

                    <div class="row" id="reservation-dates-modal">
                        <div class="form-group col">
                            <input disabled required class="form-control" type="text" placeholder="Check-in date" id="start" name="start">      
                        </div>
                        <div class="form-group col">
                            <input disabled required class="form-control" type="text" placeholder="Check-out date" id="end" name="end">
                        </div>
                    </div>
            </form>
            `
            attention.custom({
                msg:html, 
                title:"Choose your dates",
                willOpen: () => {
                    const elem = document.getElementById('reservation-dates-modal');
                    const rangepicker = new DateRangePicker(elem, {
                        format: "dd-mm-yyyy",
                        orientation : "top",

                        
                    }); 

                },
                didOpen: () => {
                    document.getElementById('start').removeAttribute('disabled');
                    document.getElementById('end').removeAttribute('disabled');

                },
                callback: function(result){
                    console.log("called");

                    let form = document.getElementById("check-availability-form");
                    let formData = new FormData(form);
                    formData.append("csrf_token","{{.CSRFToken}}");

                    fetch('/search-availability-json', {
                        method: "post",
                        body: formData,

                    })
                        .then(response => response.json())
                        .then(data => {
                            console.log(data);
                            console.log(data.ok);
                            console.log(data.message);
                            
                        })
                }
            
            })

        });

    function Prompt(){
        let toast = function(c){
            const{
                msg="",
                icon="success",
                position ="top-end"

            }=c;
            const Toast = Swal.mixin({
                toast: true,
                title:msg,
                icon:icon,
                position: position,
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.onmouseenter = Swal.stopTimer;
                    toast.onmouseleave = Swal.resumeTimer;
                }
            });
            Toast.fire({
            });
        }

        let success = function(c){
            const{
                msg ="",
                title="",
                footer="",

            }=c;
                Swal.fire({
                icon: "error",
                title: title,
                text: msg,
                footer: footer,
                });     
        }

        let error = function(c){
            const{
                msg ="",
                title="",
                footer="",

            }=c;
                Swal.fire({
                icon: "error",
                title: title,
                text: msg,
                footer: footer,
                });     
        }

        async function custom(c){
            const{
                msg="",
                title="",
            } = c;
            const { value: result } = await Swal.fire({
                title: title,
                html: msg,
                backdrop: false,
                focusConfirm: false,
                showCancelButton: true,
                willOpen: () => {   
                    if(c.willOpen!== undefined){
                        c.willOpen();
                    }     

                },

                preConfirm: () => {
                    return [
                    document.getElementById("start").value,
                    document.getElementById("end").value
                    ];
                },
                
                didOpen: () => {
                    if(c.didOpen !== undefined){
                        c.didOpen();
                    }
                }
            });
            
            if(result){
                if(result.dismiss !== Swal.DismissReason.cancel){
                    if(result.value !== ""){
                        if(c.callback !== undefined){
                            c.callback(result);
                        }
                    } else {
                        c.callback(false);
                    }
                }else{
                    c.callback(false);
                }
            }

        }

        return{
            toast: toast,
            success: success,
            error: error,
            custom:custom,

        }
    }

    </script>

{{end}}
   
